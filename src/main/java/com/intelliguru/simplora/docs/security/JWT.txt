JWT ==> Json Web Token
JWT is  way to securely transmit information between parties as Json Object.
It is URL_SAFE token that carry some information

URL_SAFE ==> It is used Base64 Encoding.

***** Why we need to use JWT based Authentication/Authorization instead of Basic Auth?
Ans:  1. In Basic Auth the UserName & Password are encoded in Base64 which can easily decoded and exposed to others.
      2. We don't need to send UserName and Password for each request.
      3. A token will be generated by server which will be used by client for some particular time interval for interaction
      and will be more secured


A JWT is a string which is combination of three main parts that are separated by dots(.)
    1. HEADER
    2. PAYLOAD
    3. SIGNATURE

Header:
    -->Header typically consists of two parts:
        1. The type of token(JWT)
        2. The signing algorithm(HMAC & SHA256)
        {
            "alg": "HS256",
            "typ": "JWT"
        }
Payload:
    --> Actual Data or Information
        {
            "userName": "John Doe",
            "user_id": "123456KH",
            "iut": "ghc"
        }
Signature:
    --> The signature is used to verify that the sender of JWT.
        To create the signature, we have to take the following steps.
            1. Encode Header
            2. Encode Payload
            3. A secret Key
            4. The algorithm specified in the header

            HS256(
                Secret,
                base64UrlEncoder(Header) + "." +base64UrlEncoder(payload)
            )

JWT Authentication Flow:
    1. Login:
        The client sends credentials (username/password) to the server.
        The server validates the credentials and generates a JWT if valid.

    2. Token Usage:
        The client includes the token in the Authorization header (Bearer <JWT>).
        The server validates the token for protected resources.

    3. Authorization:
        The server uses the claims in the token to allow or deny access.